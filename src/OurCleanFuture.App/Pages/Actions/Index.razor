@page "/actions"
@attribute [Authorize]
@using Extensions

<PageTitle>Actions</PageTitle>

@if (_isLoaded == false)
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudText Typo="Typo.h6">Loading...</MudText>
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudAlert Severity="Severity.Info" Class="mb-2">
            Tip: Don't want to lose your page/sort/filter? Use <b>Ctrl+Left Click</b> to view the action in a new tab, or <b>Ctrl+Alt+Left Click</b> to edit the action in a new tab.
        </MudAlert>
        <MudTable Items="@_filteredActions" Dense="true" Hover="true" Bordered="false" Striped="true" @bind-SelectedItem="_selectedItem"
              Filter="new Func<Data.Entities.Action,bool>(FilterFunc)"
              T="Data.Entities.Action" OnRowClick="@RowClicked" RowClass="cursor-pointer">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Actions</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Placeholder="Search by lead or title" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                @if (StateContainer.UserHasARole && !StateContainer.ClaimsPrincipal.IsInRole("Administrator") && !StateContainer.ClaimsPrincipal.IsInRole("1"))
                {
                    <MudSwitch Class="ma-1" Color="Color.Success" T="bool" @ref="_filterActionsSwitch" CheckedChanged="FilterActions">@FilterActionsText()</MudSwitch>
                }
            </ToolBarContent>
            <ColGroup>
                <MudHidden Breakpoint="Breakpoint.Xs">
                    <col style="width: 5%" />
                    <col style="width: 45%" />
                    <col style="width: 25%" />
                    <col style="width: 10%" />
                    <col style="width: 10%" />
                    <col style="width: 5%" />
                </MudHidden>
            </ColGroup>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Action, object>(a => a.Number[0])">#</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Action, string>(a => a.Title)">Title</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Action, object>(a => a.Leads.ToFriendlyName())">Lead(s)</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Action, string>(a => a.InternalStatus.GetDisplayName())">Internal Status</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Action, string>(a => a.ExternalStatus.GetDisplayName())">External Status</MudTableSortLabel></MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="#">@context.Number</MudTd>
                <MudTd DataLabel="Title">@context.Title</MudTd>
                <MudTd DataLabel="Lead(s)">@context.Leads.ToFriendlyName()</MudTd>
                <MudTd DataLabel="Internal Status">@context.InternalStatus.GetDisplayName()</MudTd>
                <MudTd DataLabel="External Status">@context.ExternalStatus.GetDisplayName()</MudTd>
                <MudTd>
                    @if (IsUserAMemberOfLeads(context))
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="(() => Edit(context.Id))" />
                    }
                    else
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" Disabled="true" />
                    }
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudContainer>
}
