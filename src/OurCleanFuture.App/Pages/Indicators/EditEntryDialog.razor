@using Data.Entities

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Edit entry
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudDatePicker Label="Date" @bind-Date="TempDate" Editable="true" />
        <MudNumericField Label="Value" @bind-Value="TempValue" Adornment="Adornment.End" AdornmentText="@Indicator.UnitOfMeasurement.Symbol" HideSpinButtons="true" />
        <MudTextField @bind-Value="Entry.Note" Label="Note (optional)" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Update">Update</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public Indicator Indicator { get; set; } = null!;

    public DateTime? TempDate { get; set; }

    public double? TempValue { get; set; }

    [Parameter]
    public Entry Entry { get; set; } = null!;

    protected override void OnInitialized()
    {
        TempDate = Entry.StartDate;
        TempValue = Entry.Value;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Update()
    {
        if (TempDate is not null && TempValue is not null)
        {
            Entry.StartDate = (DateTime)TempDate;
            Entry.Value = (double)TempValue;
            MudDialog.Close(DialogResult.Ok(Entry));
        }
    }
}