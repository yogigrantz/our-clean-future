@page "/indicators"

@if (_isLoaded == false)
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudText Typo="Typo.h6">Loading...</MudText>
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudTable Items="@_indicators" Dense="true" Hover="true" Bordered="false" Striped="true" @bind-SelectedItem="_selectedItem" Filter="new Func<Data.Entities.Indicator,bool>(FilterFunc)">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Indicators</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Placeholder="Search by lead or title" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                <MudButton Color="Color.Tertiary" Variant="Variant.Outlined" OnClick="(() => Create())" Class="flex-shrink-0">New Indicator</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Lead</MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, string>(i => i.Title)">Title</MudTableSortLabel></MudTh>
                <MudTh>Description</MudTh>
                <MudTh>Interval</MudTh>
                <MudTh>Trend</MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, object>(i => GetDateLastEntry(i)!)">Last Entry</MudTableSortLabel></MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Lead">@context.Owner.ToString()</MudTd>
                <MudTd DataLabel="Title">@context.Title</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd>@context.CollectionInterval</MudTd>
                @if (context.Id % 2 == 0)
                {
                <MudTd DataLabel="Trend"><MudIcon Icon="@Icons.Material.Filled.TrendingUp" /></MudTd>
                }
                else if (context.Id == 3)
                {
                <MudTd DataLabel="Trend"><MudIcon Icon="@Icons.Material.Filled.TrendingFlat" /></MudTd>
                }
                else
                {
                <MudTd DataLabel="Trend"><MudIcon Icon="@Icons.Material.Filled.TrendingDown" /></MudTd>
                }
            <MudTd DataLabel="Last Entry">@GetDateLastEntry(context)?.ToLongDateString()</MudTd>
            <MudTd>
                <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                    <MudMenuItem OnClick="(() => Details(context.Id))">View</MudMenuItem>
                    <MudMenuItem OnClick="(() => Edit(context.Id))">Edit</MudMenuItem>
                    <MudMenuItem>Delete</MudMenuItem>
                </MudMenu>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>
}