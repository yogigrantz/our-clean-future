@page "/indicators"
@attribute [Authorize]

@if (_isLoaded == false)
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudText Typo="Typo.h6">Loading...</MudText>
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
        <MudAlert Severity="Severity.Info" Class="mb-2">
            Tip: Don't want to lose your page/sort/filter? Use <b>Ctrl+Left Click</b> to view the indicator in a new tab, or <b>Ctrl+Alt+Left Click</b> to edit the indicator in a new tab.
        </MudAlert>
        <MudTable Items="@_filteredIndicators" Dense="true" Hover="true" Bordered="false" Striped="true" @bind-SelectedItem="_selectedItem" Filter="new Func<Data.Entities.Indicator,bool>(FilterFunc)"
              T="Data.Entities.Indicator" OnRowClick="@RowClicked" RowClass="cursor-pointer">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Indicators</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Placeholder="Search by lead, title, or description" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                <AuthorizeView Roles="Administrator, 1">
                    <MudButton Color="Color.Tertiary" Variant="Variant.Outlined" OnClick="(() => Create())" Class="flex-shrink-0">New Indicator</MudButton>
                </AuthorizeView>
                @if (StateContainer.UserHasARole && !StateContainer.ClaimsPrincipal.IsInRole("Administrator") && !StateContainer.ClaimsPrincipal.IsInRole("1"))
                {
                    <MudSwitch Class="ma-1" Color="Color.Success" T="bool" @ref="_filterIndicatorsSwitch" CheckedChanged="FilterIndicators">@FilterIndicatorsText()</MudSwitch>
                }
            </ToolBarContent>
            <ColGroup>
                <MudHidden Breakpoint="Breakpoint.Xs">
                    <col style="width: 25%" />
                    <col style="width: 15%" />
                    <col style="width: 35%" />
                    <col style="width: 5%" />
                    <col style="width: 5%" />
                    <col style="width: 10%" />
                    <col style="width: 5%" />
                </MudHidden>
            </ColGroup>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, string>(i => i.Title)">Title</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, object>(i => i.LeadsToString())">Lead(s)</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, string>(i => i.Description)">Description</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, object>(i => i.CollectionInterval)">Interval</MudTableSortLabel></MudTh>
                <MudTh>Trend</MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Data.Entities.Indicator, object>(i => GetDateLastEntry(i)!)">Last Entry</MudTableSortLabel></MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Title">@context.Title</MudTd>
                <MudTd DataLabel="Lead(s)">@context.LeadsToString()</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd>@context.CollectionInterval</MudTd>
                <MudTd DataLabel="Trend">
                    @if (GetTrend(context) == "TrendingUp")
                    {
                        <MudIcon Icon="@Icons.Material.Filled.TrendingUp" />
                    }
                    else if (GetTrend(context) == "TrendingDown")
                    {
                        <MudIcon Icon="@Icons.Material.Filled.TrendingDown" />
                    }
                    else if (GetTrend(context) == "TrendingFlat")
                    {
                        <MudIcon Icon="@Icons.Material.Filled.TrendingFlat" />
                    }
                </MudTd>
                <MudTd DataLabel="Last Entry">@GetDateLastEntry(context)?.ToString("MMM yyyy")</MudTd>
                <MudTd>
                    @if (IsUserAMemberOfLeads(context))
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="(() => Edit(context.Id))" />
                    }
                    else
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" Disabled="true" />
                    }
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudContainer>
}
